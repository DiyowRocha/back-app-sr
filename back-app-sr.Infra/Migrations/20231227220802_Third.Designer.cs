// <auto-generated />
using System;
using back_app_sr.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace back_app_sr.Infra.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231227220802_Third")]
    partial class Third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("back_app_sr.Domain.Models.Additional", b =>
                {
                    b.Property<int>("AdditionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AdditionalId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("AdditionalId");

                    b.ToTable("Additionals");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.Delivery", b =>
                {
                    b.Property<Guid>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TabId")
                        .HasColumnType("uuid");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeliveryId");

                    b.HasIndex("TabId")
                        .IsUnique();

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AdditionalId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<Guid>("TabId")
                        .HasColumnType("uuid");

                    b.HasKey("OrderId");

                    b.HasIndex("TabId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.QuickSale", b =>
                {
                    b.Property<Guid>("QuickSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("QuickSaleId");

                    b.ToTable("QuickSales");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.QuickSaleItem", b =>
                {
                    b.Property<Guid>("QuickSaleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<Guid>("QuickSaleId")
                        .HasColumnType("uuid");

                    b.HasKey("QuickSaleItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("QuickSaleId");

                    b.ToTable("QuickSaleItems");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.Tab", b =>
                {
                    b.Property<Guid>("TabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TabType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TableNumber")
                        .HasColumnType("integer");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("TabId");

                    b.ToTable("Tabs");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.TabPayment", b =>
                {
                    b.Property<Guid>("TabPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Change")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsChangeRequested")
                        .HasColumnType("boolean");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TabId")
                        .HasColumnType("uuid");

                    b.HasKey("TabPaymentId");

                    b.HasIndex("TabId");

                    b.ToTable("TabPayments");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.Delivery", b =>
                {
                    b.HasOne("back_app_sr.Domain.Models.Tab", "Tab")
                        .WithOne("Delivery")
                        .HasForeignKey("back_app_sr.Domain.Models.Delivery", "TabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tab");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.Order", b =>
                {
                    b.HasOne("back_app_sr.Domain.Models.Tab", "Tab")
                        .WithMany("Orders")
                        .HasForeignKey("TabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tab");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.QuickSaleItem", b =>
                {
                    b.HasOne("back_app_sr.Domain.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back_app_sr.Domain.Models.QuickSale", "QuickSale")
                        .WithMany("QuickSaleItems")
                        .HasForeignKey("QuickSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("QuickSale");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.TabPayment", b =>
                {
                    b.HasOne("back_app_sr.Domain.Models.Tab", "Tab")
                        .WithMany("Payments")
                        .HasForeignKey("TabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tab");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.QuickSale", b =>
                {
                    b.Navigation("QuickSaleItems");
                });

            modelBuilder.Entity("back_app_sr.Domain.Models.Tab", b =>
                {
                    b.Navigation("Delivery")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
